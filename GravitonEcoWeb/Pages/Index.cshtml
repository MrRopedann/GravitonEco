@page
@model IndexModel
@{
    ViewData["Title"] = "Мониторинг данных";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Graviton-ECO</title>
    <link rel="stylesheet" href="~/css/index.css" />
    <script src="~/js/site.js"></script>
</head>
<body>
    <div class="main-content">
        <div class="left-panel">
            @if (Model.Groups != null && Model.Groups.Any())
            {
                @foreach (var group in Model.Groups)
                {
                    <h3 class="group-header" group-name="@group.Key" onclick="toggleGroup('@group.Key')">
                        @group.Key @(group.Value ? "(Развернуто)" : "(Свернуто)")
                    </h3>
                    @if (group.Value && Model.GroupedParameters.ContainsKey(group.Key))
                    {
                        <table>
                            <thead>
                                <tr>
                                    <th class="param">Параметр</th>
                                    <th class="min">Мин.</th>
                                    <th class="max">Макс.</th>
                                    <th class="avg">Сред.</th>
                                    <th class="current">Текущ.</th>
                                    <th class="threshold1">Порог 1</th>
                                    <th class="threshold2">Порог 2</th>
                                    <th class="growth">Нарастание</th>
                                    <th class="period">Период</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var param in Model.GroupedParameters[group.Key].Select((value, index) => new { Value = value, Index = index }))
                                {
                                    <tr>
                                        <td class="param">@param.Value.Name</td>
                                        <td class="min">@param.Value.Min</td>
                                        <td class="max">@param.Value.Max</td>
                                        <td class="avg">@param.Value.Average</td>
                                        <td class="current" id="current-data-@param.Index">@param.Value.Current</td>

                                        <td class="threshold1">
                                            <input id="threshold1-data-@param.Index" type="text" value="@param.Value.Threshold1"
                                                   class="numeric-input @(param.Value.AlarmPorog1 ? "warning" : "")"
                                                   onfocus="startEditing()" onblur="stopEditing()"
                                                   onkeydown="submitValue(event, '@param.Value.Name', 'Threshold1', this.value)" />
                                        </td>

                                        <td class="threshold2">
                                            <input id="threshold2-data-@param.Index" type="text" value="@param.Value.Threshold2"
                                                   class="numeric-input @(param.Value.AlarmPorog2 ? "warning" : "")"
                                                   onfocus="startEditing()" onblur="stopEditing()"
                                                   onkeydown="submitValue(event, '@param.Value.Name', 'Threshold2', this.value)" />
                                        </td>

                                        <td class="growth">
                                            <input id="growth-data-@param.Index" type="text" value="@param.Value.Growth"
                                                   class="numeric-input @(param.Value.AlarmPorog3 ? "warning" : "")"
                                                   onfocus="startEditing()" onblur="stopEditing()"
                                                   onkeydown="submitValue(event, '@param.Value.Name', 'Growth', this.value)" />
                                        </td>

                                        <td class="period">
                                            <input id="period-data-@param.Index" type="text" value="@param.Value.Period"
                                                   class="numeric-input @(param.Value.AlarmPorog3 ? "warning" : "")"
                                                   onfocus="startEditing()" onblur="stopEditing()"
                                                   onkeydown="submitValue(event, '@param.Value.Name', 'Period', this.value)" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }
            }
        </div>
        <div class="right-panel">
            <h3>Калибровка Газоанализатора</h3>
            <table>
                <thead>
                    <tr>
                        <th class="param">Параметр</th>
                        <th class="current">Текущее</th>
                        <th class="setting-zero">Уст. Нуля</th>
                        <th class="pgs-concentration">Конц-я ПГС</th>
                        <th class="adc-value">Знач-е АЦП</th>
                        <th class="calculated-zero">Расчетный "0"</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var param in Model.GasCalibrationParameters)
                    {
                        <tr>
                            <td class="param">@param.Name</td>
                            <td class="current">@param.CurrentValue</td>
                            <td class="setting-zero"><input type="text" value="@param.SettingZero" class="numeric-input" onkeydown="submitValue(event, '@param.Name', 'SettingZero', this.value)" /></td>
                            <td class="pgs-concentration"><input type="text" value="@param.PGSConcentration" class="numeric-input" onkeydown="submitValue(event, '@param.Name', 'PGSConcentration', this.value)" /></td>
                            <td class="adc-value"><input type="text" value="@param.ADCValue" class="numeric-input" onkeydown="submitValue(event, '@param.Name', 'ADCValue', this.value)" /></td>
                            <td class="calculated-zero"><input type="text" value="@param.CalculatedZero" class="numeric-input" onkeydown="submitValue(event, '@param.Name', 'CalculatedZero', this.value)" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function toggleGroup(groupName) {
            const isExpanded = document.querySelector(`h3[group-name="${groupName}"]`).textContent.includes("Развернуто");

            fetch('/api/modbus/toggle-group', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ groupName, isExpanded: !isExpanded }) // Переключаем состояние
            })
                .then(response => response.text())
                .then(data => {
                    location.reload(); // Перезагрузка страницы для обновления данных
                })
                .catch(error => {
                    console.error('Ошибка при изменении состояния группы:', error);
                });
        }
    </script>
</body>
</html>
